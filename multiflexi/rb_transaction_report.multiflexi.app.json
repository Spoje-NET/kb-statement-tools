{
    "image": "data:image\/svg+xml;base64,",
    "name": "RB transaction report",
    "description": "Raiffeisenbank transaction report",
    "executable": "raiffeisenbank-transaction-report",
    "setup": "",
    "cmdparams": "",
    "deploy": "apt install raiffeisenbank-statement-tools",
    "homepage": "https://github.com/Spoje-NET/raiffeisenbank-statement-tools",
    "requirements": "RaiffeisenBank",
    "ociimage": "",
    "uuid": "97f30cf9-2d9e-4d91-ad65-9bdd8b4663cd",
    "topics": "RaiffeisenBank,Transactions,Check,Json,Report",
    "environment": {
        "ACCOUNT_NUMBER": {
            "type": "text",
            "description": "Bank Account Number",
            "defval": "",
            "required": true
        },
        "CERT_PASS": {
            "type": "password",
            "description": "Certificate password",
            "defval": "",
            "required": true
        },
        "CERT_FILE": {
            "type": "string",
            "description": "Path to RB Certificate file",
            "defval": "",
            "required": true
        },
        "REPORT_SCOPE": {
            "type": "text",
            "description": "Time scope of transactions downloaded",
            "defval": "last_month",
            "required": false
        },
        "XIBMCLIENTID": {
            "type": "text",
            "description": "ClientID",
            "defval": "",
            "required": true
        },
        "RESULT_FILE": {
            "type": "string",
            "description": "write output json data to",
            "defval": "transaction_report.json",
            "required": false
        }
    },
    "multiflexi": "1.10.2.0"
}
